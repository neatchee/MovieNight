name: Build

on:
  push:
    branches:
      - master
    tags:
      - v*.*.*
  pull_request:
    branches: []

  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  pre-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: ^1.20

      - name: vet
        run: go vet ./...

      - name: test
        run: go test ./...

      - name: test ui
        run: go test ./... -tags=test_ui

  build:
    runs-on: ubuntu-latest

    needs: pre-build

    strategy:
      matrix:
        os: [linux, windows, darwin, netbsd, freebsd, openbsd]
        arch: [amd64, arm64]

    env:
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: ^1.20

      - name: build
        run: go build

      - uses: actions/upload-artifact@v3
        if: github.event_name != 'pull_request'
        with:
          name: MovieNight-${{ matrix.os }}-${{ matrix.arch }}
          if-no-files-found: error
          path: MovieNight*

  docker:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'

    needs: pre-build

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
